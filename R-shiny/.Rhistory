library(rpart)
#fit to a CART model using the rpart
modelfit1 <- train(Class~.,
method = 'rpart',
data = training
)
modelfit1$finalModel
library(pgmm)
data("olive")
olive[,1]
col.names(olive[,1])
colnames(olive[,1])
colnames(olive
)
olive = olive[,-1]
model1 = train(Area~.,
data = olive,
method = 'ct'
)
model1 = train(Area~.,
data = olive,
method = 't'
)
model1 = train(Area~.,
data = olive,
method = 'tree'
)
method = 'CART'
model1 = train(Area~.,
data = olive,
method = 'CART'
)
install.packages(rattle)
install.packages('rattle')
model1 = train(Area~.,
data = olive,
method = 'rpart'
)
model1 = train(Area~.,
data = olive,
method = 'rpart'
)
library(rpart)
model1 = train(Area~.,
data = olive,
method = 'rpart'
)
model1
install.packages('rattle')
tree(model1)
newdata = as.data.frame(t(colMeans(olive)))
predict.train(model1, newdata = newdata)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
#subset by Case column
istest <- segmentationOriginal$Case == 'Test'
testing <- segmentationOriginal[istest,]
training <- segmentationOriginal[!istest,]
set.seed(125)
library(ggplot2)
library(rpart)
#fit to a CART model using the rpart
modelfit1 <- train(Class~.,
method = 'rpart',
data = training
)
modelfit1$finalModel
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
rm(list = ls())
library(ElemStatLearn)
data(SAheart)
View(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
model1 = train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA,
method = 'glm', family = 'binomial'
)
model1 = train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA,
method = 'glm', family = binomial()
)
model1 = train(factor(chd) ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA,
method = 'glm', family = binomial()
)
missClass(testSA$chd, predict(model1, newdata = testSA))
SAheart$chd = as.integer(SAheart$chd)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
model1 = train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA,
method = 'glm', family = binomial()
)
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
missClass(testSA$chd, predict(model1, newdata = testSA))
confusionMatrix(model1)
missClass(testSA$chd, predict(model1, newdata = trainSA))
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
model1 = train(chd ~ age + alcohol + obesity + tobacco + typea + ldl,
data = trainSA,
method = 'glm', family = binomial()
)
missClass = function(values,prediction){
sum(((prediction > 0.5)*1) != values)/length(values)
}
missClass(testSA$chd, predict(model1, newdata = testSA))
missClass(testSA$chd, predict(model1, newdata = trialSA))
missClass(testSA$chd, predict(model1, newdata = trainSA))
missClass(testSA$chd, predict(model1, testSA))
missClass(testSA$chd, predict(model1, trainSA))
missClass(trainSA$chd, predict(model1, trainSA))
missClass(testSA$chd, predict(model1, testSA))
missClass(trainSA$chd, predict(model1, trainSA))
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
rm(list = ls())
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
View(vowel.train)
model <- train(y ~ .,
data = vowel.train,
method = 'rf'
)
summary(model)
importance(model)
varImp(model)
vowel.test$y <- as.factor(vowel.test$y)
vowel.train$y <- as.factor(vowel.train$y)
model <- train(y ~ .,
data = vowel.train,
method = 'rf'
)
summary(model)
varImp(model)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
vowel.test$y <- as.factor(vowel.test$y)
vowel.train$y <- as.factor(vowel.train$y)
model <- train(y ~ .,
data = vowel.train,
method = 'rf'
)
summary(model)
varImp(model)
res <- predict(modRF,vowel.test)
varImp(model)
res <- predict(model,vowel.test)
varImp(model)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
vowel.test$y <- as.factor(vowel.test$y)
vowel.train$y <- as.factor(vowel.train$y)
model <- train(y ~ .,
data = vowel.train,
method = 'rf'
)
summary(model)
res <- predict(model,vowel.test)
varImp(model)
install.packages('shiny')
install.packages('shiny')
library(shiny)
install.packages('shiny')
install.packages('shiny')
library(shiny)
runApp('Documents/shiny/tutorial')
runApp('Documents/shiny/tutorial')
runApp('Documents/shiny/tutorial')
runApp('Documents/shiny/tutorial')
runApp('Documents/shiny/tutorial')
runApp('github/Developing_Data_Products/Shiny_Part_2/app2')
?ifelse
runApp('github/Developing_Data_Products/Shiny_Part_2/app2')
runApp('github/Developing_Data_Products/Shiny_Part_2/app3')
runApp('github/Developing_Data_Products/Shiny_Part_2/app4')
installed.packages("miniUI")
instal.packages("miniUI")
install.packages("miniUI")
runGadget(ui, server)
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
runGadget(ui, server)
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
runApp()
runGadget()
runGadget("gadget.t")
runGadget("gadget.r")
runGadget("gadget.r", "gadget.r")
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
View(myFirstGadget)
View(myFirstGadget)
myFirstGadget()
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
x <- c(1, 2, 4, 5, 6)
y <- c(600, 3, 26345, 194142)
multipy_numbers(x, y)
y <- c(600, 3, 26345, 194142)
multipy_numbers(x, y)
source('~/Documents/shiny/gadget/gadget.r', echo=TRUE)
pickTrees()
test <- pickTrees()
install.packages("googleVis")
installed.packages("plotly")
install.packages("plotly")
install.packages("plotly")
update.packages(ggplot2)
update.packages("ggplot2")
install.packages("plotly")
update.packages()
library(plotly)
install.packages("plotly")
library(plotly)
plot_ly()
library(ggplot2)
update.packages()
library(ggplot2)
update(ggplot2)
old.packages()
update.packages()
install.packages("rccp")
install.packages("Rccp")
install.packages('rccp')
install.packages('Rccp')
setwd("~/github/drug-spending/Burrbank-R")
read_feather('../combined-spending.feather')
library(feather)
setwd("~/github/drug-spending/Burrbank-R/selector")
read_feather('../combined-spending.feather')
shiny::runApp('github/drug-spending/Burrbank-R')
drug_costs <- read_feather('combined-spending.feather')
setwd("~/github/drug-spending/Burrbank-R")
drug_costs <- read_feather('combined-spending.feather')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cd()
getwd()
library(feather)
read_feather('../data/drugnames.feather')
library(jsonlite)
jsonlite::fromJSON('../data/drug_list.json')
test <- jsonlite::fromJSON('../data/drug_list.json')
summary(test)
str(test)
test$name
drug_costs[drug_costs$drugname_brand == "Synjardy"]
drug_costs[drug_costs$drugname_brand == "Synjardy",]
drug_costs[drug_costs$drugname_brand == "Abilify",]
drug_costs[drug_costs$drugname_brand == "Abilify ",]
View(drug_costs)
drug_costs[drug_costs$drugname_brand == "ABILIFY",]
drug_costs[drug_costs$drugname_brand == "ABILIFY ",]
test[test$name == "10 Wash"]
test[test$name == "10 Wash",]
test[test$name == grep("10 Wash"),]
test[test$name == grep("10 Wash", test$name),]
grep("10 Wash", test$name)
grep("8-mop", test$name)
grep("8-Mop", test$name)
grep("Abelcet", test$name)
grep("Abelcet ", test$name)
grep("abelcet ", test$name)
grepl("abelcet ", test$name)
View(drug_costs)
View(test)
test$specific_treatment
test[1,]$therapeutic_areas
library(feather)
library(jsonlite)
# load in spending data
spend2011 <- read_feather('../data/spending-2011.feather')
spend2012 <- read_feather('../data/spending-2012.feather')
spend2013 <- read_feather('../data/spending-2013.feather')
spend2014 <- read_feather('../data/spending-2014.feather')
spend2015 <- read_feather('../data/spending-2015.feather')
# add year column
spend2011$year <- 2011
spend2012$year <- 2012
spend2013$year <- 2013
spend2014$year <- 2014
spend2015$year <- 2015
# stack the dataframes
spend <- rbind(spend2011, spend2012, spend2013, spend2014, spend2015)
spend <- spend[order(spend$drugname_generic, spend$drugname_brand, spend$year),]
View(spend)
rm(list=ls())
drug_names <- read_feather('../data/drug_names.feather')
drug_names <- read_feather('../data/drugnames.feather')
rm(drug_names)
source('~/github/drug-spending/R-shiny/combine-data.r', echo=TRUE)
rm(spend2011,spend2012,spend2013,spend2014,spend2015)
drug_names <- read_feather('../data/drugnames.feather')
drug_info <- fromJSON('../data/drug_list.json')
spend[1,]$drugname_brand
drug_names[1,]
drug_info[1,]$name
"test" + " "
paste("test", " ")
toupper("test")
lapply(drug_info$name, function(t){})
lapply(drug_info$name, function(t){
t <-toupper(t)
t <- paster(t + " ")
})
lapply(drug_info$name, function(t){
t <-toupper(t)
t <- paste(t + " ")
})
lapply(drug_info$name, function(t){
t <-toupper(t)
t <- paste(t," ")
})
View(spend)
spend <- spend[order(spend$drugname_generic, spend$drugname_brand, spend$year),]
View(spend)
View(drug_info)
View(drug_names)
drug_info$name[1]
toupper(drug_info$name[1])
name <- toupper(drug_info$name[1])
name <- strsplit(name, split = )
name <- strsplit(name, split = ' ')
name
match <- grep(name[1], drug_info$name)
match <- grep(paste('^', name[1]), drug_info$name)
match <- grep(paste(name[1]), drug_info$name)
match <- grep(as.character(name[1]), drug_info$name)
match <- grepl(as.character(name[1]), drug_info$name)
sum(match)
name[1]
match <- grep(name[1], drug_names$drugname_brand)
match
drugnames[match,]
drug_names[match,]
for(drug in drug_info){
for(drug in drug_info{ print(drug$name)}
for(drug in drug_info){ print(drug$name)}
for(drug in drug_info){ print(drug)}
for(drug in drug_info$name){ print(drug)}
spend[1,]$test <- 'test'
spend[1,]
spend[,'theriputic areas'] <- NA
spend[,'theriputic_areas'] <- NA
for(drug in drug_info$name){
name <- toupper(drug$name)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names$drugname_brand[match], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names$drugname_brand[match], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
drug_names[,match]$drugname_brand
match <- 1
drug_names[match,1]
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
print(name, drug, match)
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[1], drug_names$drugname_brand)
print(name)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[1], drug_names$drugname_brand)
print(name)
print(match)
print(drug)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
match <- grep(name[1], drug_names$drugname_brand)
match <- grep(paste(name[1], ' '), drug_names$drugname_brand)
match <- grepl(paste(name[1], ' '), drug_names$drugname_brand)
sum(match)
drug_names[642,]
drug_names[642,]$drugname_brand
match <- grep(paste(name[1], ' ', sep =), drug_names$drugname_brand)
match <- grep(paste(name[1], ' ', sep =""), drug_names$drugname_brand)
match <- grep(paste(name[1], '+', sep =""), drug_names$drugname_brand)
match <- grep(name[1], drug_names$drugname_brand)
name[1]
name[[1]]
name[1,1]
name[[[1]]
name[[[1]]]
name
name[1][1]
name[1][1][1]
name[[1]][1]
match <- grep(name[[1]][1], drug_names$drugname_brand)
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[[1]][1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ]
# match first word to any word in spend brand names
}
drug_info[drug_info$name == drug, "therapeutic_areas" ]
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[[1]][1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- list(drug_info[drug_info$name == drug, "therapeutic_areas" ])
# match first word to any word in spend brand names
}
drug_info[drug_info$name == drug, "therapeutic_areas" ]
drug_info[drug_info$name == drug, "therapeutic_areas" ][1]
drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]]
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]]
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[[1]][1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]]
# match first word to any word in spend brand names
}
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- list(drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]])
for(drug in drug_info$name){
name <- toupper(drug)
# grab first word from name
name <- strsplit(name, split = ' ')
match <- grep(name[[1]][1], drug_names$drugname_brand)
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- list(drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]])
# match first word to any word in spend brand names
}
spend[spend$drugname_brand == drug_names[match,1], "theriputic_areas"] <- drug_info[drug_info$name == drug, "therapeutic_areas" ][[1]]
